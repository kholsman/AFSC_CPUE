#Check the data
load("/Users/kholsman/GitHub_new/AFSC_CPUE/data/out/cpue/goa/goa.srvy47.pcod.cpue.Rdata")
load("/Users/kholsman/GitHub_new/AFSC_CPUE/data/in/pev_data_newest/pcod.cpue.goa.Rdata")
load("/Users/kholsman/Downloads/test_pcod_albi.RData")
BIN_tmp        <- 185
VESSEL_tmp     <- 94
CRUISE_tmp     <- 199601
HAUL_tmp       <-  8
STATIONID_tmp  <-  "30-21"
STRATUM_tmp    <- 10
#Check the data
load("/Users/kholsman/GitHub_new/AFSC_CPUE/data/out/cpue/goa/goa.srvy47.pcod.cpue.Rdata")
load("/Users/kholsman/GitHub_new/AFSC_CPUE/data/in/pev_data_newest/pcod.cpue.goa.Rdata")
load("/Users/kholsman/Downloads/test_pcod_albi.RData")
data_20 <- pcod.cpue.goa
data_21 <- cpue_data
data_albi <- data.frame(test_pcod_albi)
BIN_tmp        <- 185
VESSEL_tmp     <- 94
CRUISE_tmp     <- 199601
HAUL_tmp       <-  8
STATIONID_tmp  <-  "30-21"
STRATUM_tmp    <- 10
test_albi<- data_albi%>%filter(VESSEL == VESSEL_tmp,
CRUISE == CRUISE_tmp,
HAUL   == HAUL_tmp,
STRATUM == STRATUM_tmp,
STATIONID == STATIONID_tmp)
test_20<- data_20%>%filter(VESSEL == VESSEL_tmp,
CRUISE == CRUISE_tmp,
HAUL   == HAUL_tmp,
STRATUM == STRATUM_tmp,
STATIONID == STATIONID_tmp)
test_21<- data_21%>%filter(VESSEL == VESSEL_tmp,
CRUISE == CRUISE_tmp,
HAUL   == HAUL_tmp,
STRATUM == STRATUM_tmp,
STATIONID == STATIONID_tmp)
test_20
data_20
data_20 <- pcod.cpue.goa$data
data_21 <- cpue_data
data_albi <- data.frame(test_pcod_albi)
BIN_tmp        <- 185
VESSEL_tmp     <- 94
CRUISE_tmp     <- 199601
HAUL_tmp       <-  8
STATIONID_tmp  <-  "30-21"
STRATUM_tmp    <- 10
test_albi<- data_albi%>%filter(VESSEL == VESSEL_tmp,
CRUISE == CRUISE_tmp,
HAUL   == HAUL_tmp,
STRATUM == STRATUM_tmp,
STATIONID == STATIONID_tmp)
test_20<- data_20%>%filter(VESSEL == VESSEL_tmp,
CRUISE == CRUISE_tmp,
HAUL   == HAUL_tmp,
STRATUM == STRATUM_tmp,
STATIONID == STATIONID_tmp)
test_21<- data_21%>%filter(VESSEL == VESSEL_tmp,
CRUISE == CRUISE_tmp,
HAUL   == HAUL_tmp,
STRATUM == STRATUM_tmp,
STATIONID == STATIONID_tmp)
test_20
data_20 <- pcod.cpue.goa$data
len_20  <- pcod.cpue.goa$length
loc_20  <-  pcod.cpue.goa$location
data_21 <- cpue_data
data_albi <- data.frame(test_pcod_albi)
BIN_tmp        <- 185
VESSEL_tmp     <- 94
CRUISE_tmp     <- 199601
HAUL_tmp       <-  8
STATIONID_tmp  <-  "30-21"
STRATUM_tmp    <- 10
test_albi<- data_albi%>%filter(VESSEL == VESSEL_tmp,
CRUISE == CRUISE_tmp,
HAUL   == HAUL_tmp,
STRATUM == STRATUM_tmp,
STATIONID == STATIONID_tmp)
test_20<- data_20%>%filter(VESSEL == VESSEL_tmp,
CRUISE == CRUISE_tmp,
HAUL   == HAUL_tmp,
STRATUM == STRATUM_tmp,
STATIONID == STATIONID_tmp)
test_21<- data_21%>%filter(VESSEL == VESSEL_tmp,
CRUISE == CRUISE_tmp,
HAUL   == HAUL_tmp,
STRATUM == STRATUM_tmp,
STATIONID == STATIONID_tmp)
test_20
test_len_20<- len_20%>%filter(VESSEL == VESSEL_tmp,
CRUISE == CRUISE_tmp,
HAUL   == HAUL_tmp,
STRATUM == STRATUM_tmp,
STATIONID == STATIONID_tmp)
test_loc_20<- loc_20%>%filter(VESSEL == VESSEL_tmp,
CRUISE == CRUISE_tmp,
HAUL   == HAUL_tmp,
STRATUM == STRATUM_tmp,
STATIONID == STATIONID_tmp)
head(len_20)
test_loc_20
names(pcod.cpue.goa)
test_albi<- data_albi%>%filter(VESSEL == VESSEL_tmp,
CRUISE == CRUISE_tmp,
HAUL   == HAUL_tmp,
STRATUM == STRATUM_tmp,
STATIONID == STATIONID_tmp)
test_20<- data_20%>%filter(VESSEL == VESSEL_tmp,
CRUISE == CRUISE_tmp,
HAUL   == HAUL_tmp,
STRATUM == STRATUM_tmp,
STATIONID == STATIONID_tmp)
test_len_20<- len_20%>%filter(VESSEL == VESSEL_tmp,
CRUISE == CRUISE_tmp,
HAUL   == HAUL_tmp,
STRATUM.x == STRATUM_tmp,
STATIONID == STATIONID_tmp)
test_loc_20<- loc_20%>%filter(VESSEL == VESSEL_tmp,
CRUISE == CRUISE_tmp,
HAUL   == HAUL_tmp,
STRATUM == STRATUM_tmp,
STATIONID == STATIONID_tmp)
test_21<- data_21%>%filter(VESSEL == VESSEL_tmp,
CRUISE == CRUISE_tmp,
HAUL   == HAUL_tmp,
STRATUM == STRATUM_tmp,
STATIONID == STATIONID_tmp)
test_len_20<- len_20%>%filter(VESSEL == VESSEL_tmp,
CRUISE == CRUISE_tmp,
HAUL   == HAUL_tmp,
STRATUM.x == STRATUM_tmp)
test_len_20
test_21
test_21[1:3,]
test_21[1:3,]
tets_20[1:3,]
test_20[1:3,]
2706.625*(1/32)
1474.891*(1/32)
unique(data_20$srvy_nm)
#Check the data
load("/Users/kholsman/GitHub_new/AFSC_CPUE/data/out/cpue/goa/goa.srvy47.pcod.cpue.Rdata")
splist
sp<-"plk"
flnm <- paste0("/Users/kholsman/Data/01_SRVY_AFSC_data_all/Newest/cpue_data/",sp,".cpue.goa.Rdata")
flnm
flnm <- paste0("/Users/kholsman/Data/01_SRVY_AFSC_data_all/Newest/cpue_data/",sp,".cpue.goa.Rdata")
load(flnm)
flnmout <-  paste0("/Users/kholsman/GitHub_new/AFSC_CPUE/data/out/2020_versions/",sp,".cpue.goa.Rdata")
for(sp in names(splist)){
flnm <- paste0("/Users/kholsman/Data/01_SRVY_AFSC_data_all/Newest/cpue_data/",sp,".cpue.goa.Rdata")
load(flnm)
flnmout <-  paste0("/Users/kholsman/GitHub_new/AFSC_CPUE/data/out/2020_versions/",sp,".cpue.goa.Rdata")
paste0("save(",sp,".cpue.goa$data,file=",flnmout,")")
}
for(sp in names(splist)){
flnm <- paste0("/Users/kholsman/Data/01_SRVY_AFSC_data_all/Newest/cpue_data/",sp,".cpue.goa.Rdata")
load(flnm)
flnmout <-  paste0("/Users/kholsman/GitHub_new/AFSC_CPUE/data/out/2020_versions/",sp,".cpue.goa.Rdata")
eval(parse(text=paste0("save(",sp,".cpue.goa$data,file=",flnmout,")") )))
}
for(sp in names(splist)){
flnm <- paste0("/Users/kholsman/Data/01_SRVY_AFSC_data_all/Newest/cpue_data/",sp,".cpue.goa.Rdata")
load(flnm)
flnmout <-  paste0("/Users/kholsman/GitHub_new/AFSC_CPUE/data/out/2020_versions/",sp,".cpue.goa.Rdata")
eval(parse(text=paste0("save(",sp,".cpue.goa$data,file=",flnmout,")") ))
}
eval(parse(text=paste0("save(",sp,".cpue.goa$data,file=",flnmout,")") ))
flnmout
for(sp in names(splist)){
flnm <- paste0("/Users/kholsman/Data/01_SRVY_AFSC_data_all/Newest/cpue_data/",sp,".cpue.goa.Rdata")
load(flnm)
flnmout <-  paste0("~/GitHub_new/AFSC_CPUE/data/out/2020_versions/",sp,".cpue.goa.Rdata")
eval(parse(text=paste0("save(",sp,".cpue.goa$data,file=",flnmout,")") ))
}
paste0("save(",sp,".cpue.goa$data,file=",flnmout,")")
?save
cpue_data_2020 <- eval(parse(text=paste0("",sp,".cpue.goa$data) ))
eval(parse(text=paste0("save(",sp,".cpue.goa$data,file=",flnmout,")") ))
}
#Check the data
load("/Users/kholsman/GitHub_new/AFSC_CPUE/data/out/cpue/goa/goa.srvy47.pcod.cpue.Rdata")
load("/Users/kholsman/GitHub_new/AFSC_CPUE/data/in/pev_data_newest/pcod.cpue.goa.Rdata")
load("/Users/kholsman/Downloads/test_pcod_albi.RData")
data_20 <- pcod.cpue.goa$data
len_20  <- pcod.cpue.goa$length
loc_20  <-  pcod.cpue.goa$location
data_21 <- cpue_data
data_albi <- data.frame(test_pcod_albi)
BIN_tmp        <- 185
VESSEL_tmp     <- 94
CRUISE_tmp     <- 199601
HAUL_tmp       <-  8
STATIONID_tmp  <-  "30-21"
STRATUM_tmp    <- 10
test_albi<- data_albi%>%filter(VESSEL == VESSEL_tmp,
CRUISE == CRUISE_tmp,
HAUL   == HAUL_tmp,
STRATUM == STRATUM_tmp,
STATIONID == STATIONID_tmp)
test_20<- data_20%>%filter(VESSEL == VESSEL_tmp,
CRUISE == CRUISE_tmp,
HAUL   == HAUL_tmp,
STRATUM == STRATUM_tmp,
STATIONID == STATIONID_tmp)
test_len_20<- len_20%>%filter(VESSEL == VESSEL_tmp,
CRUISE == CRUISE_tmp,
HAUL   == HAUL_tmp,
STRATUM.x == STRATUM_tmp)
test_loc_20<- loc_20%>%filter(VESSEL == VESSEL_tmp,
CRUISE == CRUISE_tmp,
HAUL   == HAUL_tmp,
STRATUM == STRATUM_tmp,
STATIONID == STATIONID_tmp)
test_21<- data_21%>%filter(VESSEL == VESSEL_tmp,
CRUISE == CRUISE_tmp,
HAUL   == HAUL_tmp,
STRATUM == STRATUM_tmp,
STATIONID == STATIONID_tmp)
test_21[1:3,]
test_20[1:3,]
test$CPUE_KGKM2
test$CPUE_NUMKM2
test_2 <- cpue_data%>%filter(VESSEL == test$VESSEL,
CRUISE == test$CRUISE,
STATIONID == test$STATIONID,
BIN  == test$BIN)
test_2$CPUE_KGKM2
test_2$CPUE_NUMKM2
cpue_correct <- (pcod.cpue.goa$data)
testa  <- cpue_correct[1,]
test_3 <- cpue_data%>%filter(VESSEL == test$VESSEL,
CRUISE == test$CRUISE,
STATIONID == test$STATIONID,
BIN  == test$BIN)
test_3$CPUE_KGKM2
test_3$CPUE_NUMKM2
testa  <- cpue_correct[1,]
test_4 <- cpue_data%>%filter(VESSEL == test$VESSEL,
CRUISE == test$CRUISE,
STATIONID == test$STATIONID)%>%
summarize(totCPUE = sum(CPUE_NUMKM2))
catch4  <- location_catch%>%filter(VESSEL == test$VESSEL,
CRUISE == test$CRUISE,
STATIONID == test$STATIONID)
test_3$CPUE_KGKM2
test_3$CPUE_NUMKM2
cpue_data_2020 <- eval(parse(text=paste0("",sp,".cpue.goa$data") ))
save(cpue_data_2020,file=flnmout)
for(sp in names(splist)){
flnm <- paste0("/Users/kholsman/Data/01_SRVY_AFSC_data_all/Newest/cpue_data/",sp,".cpue.goa.Rdata")
load(flnm)
flnmout <-  paste0("/Users/kholsman/GitHub_new/AFSC_CPUE/data/out/2020_versions/",sp,".cpue.goa.Rdata")
cpue_data_2020 <- eval(parse(text=paste0("",sp,".cpue.goa$data") ))
save(cpue_data_2020,file=flnmout)
}
load("/Users/kholsman/GitHub_new/AFSC_CPUE/data/out/2020_versions/halibut.cpue.goa.Rdata")
head(cpue_data_2020)
load("/Users/kholsman/GitHub_new/AFSC_CPUE/data/out/2020_versions/pcod.cpue.goa.Rdata")
head(cpue_data_2020)
load("/Users/kholsman/GitHub_new/AFSC_CPUE/data/out/2020_versions/plk.cpue.goa.Rdata")
head(cpue_data_2020)
load("/Users/kholsman/GitHub_new/AFSC_CPUE/data/out/2020_versions/atf.cpue.goa.Rdata")
head(cpue_data_2020)
load("/Users/kholsman/GitHub_new/AFSC_CPUE/data/out/2020_versions/pcod.cpue.goa.Rdata")
head(cpue_data_2020)
load("/Users/kholsman/GitHub_new/AFSC_CPUE/data/out/2020_versions/plk.cpue.goa.Rdata")
head(cpue_data_2020)
load("/Users/kholsman/GitHub_new/AFSC_CPUE/data/out/2020_versions/sablefish.cpue.goa.Rdata")
head(cpue_data_2020)
220+598+72.8+358+473.6+1400+300+1500
4922.4+1.2
4922.4+1200
#parameters
tmp_par       <- dataIN$tmp_par
tmp_par$RFR   <- par[1]
#target weight
Wtarget       <- dataIN$Wtarget
# temperature timeseries
tmp_Tdat      <- dataIN$tmp_Tdat
# set initial 'spawn' value to zero, or according to spawning data frame
if(!is.na(dataSPAWN)){
} else{dataIN$tmp_dat$spawn <- 0}
#
dataSPAWN=NA
LL=TRUE
#parameters
tmp_par       <- dataIN$tmp_par
tmp_par$RFR   <- par[1]
#target weight
Wtarget       <- dataIN$Wtarget
# temperature timeseries
tmp_Tdat      <- dataIN$tmp_Tdat
# set initial 'spawn' value to zero, or according to spawning data frame
if(!is.na(dataSPAWN)){
} else{dataIN$tmp_dat$spawn <- 0}
#
tmp_dat
#simulation function:
sim_W <- function(par=0.4,dataIN,dataSPAWN=NA,LL=TRUE){
#parameters
tmp_par       <- dataIN$tmp_par
tmp_par$RFR   <- par[1]
#target weight
Wtarget       <- dataIN$Wtarget
# temperature timeseries
tmp_Tdat      <- dataIN$tmp_Tdat
# set initial 'spawn' value to zero, or according to spawning data frame
if(!is.na(dataSPAWN)){
} else{dataIN$tmp_dat$spawn <- 0}
#
tmp_dat       <- dataIN$tmp_dat
nd            <- dim(tmp_Tdat)[1]
W             <- rep(0,nd)
tt            <- bioE(par=tmp_par,data=tmp_dat)[[2]]
sim           <- data.frame(matrix(0,nd,dim(tt)[2]))
colnames(sim) <- names(tt)
sim[1,]       <- tt[1,]
rm(tt)
for(d in 2:nd){
# assign weight at the start of day d to that from the previous day
tmp_dat$TempC <- tmp_Tdat$TempC[d]
#if(d>1)
tmp_dat$W <- sim$W[d-1]
# if applicable, determine whether individual lost energy to spawning on day d
sim[d,]     <- bioE(par=tmp_par,data=tmp_dat)[[2]]
sim$W[d]    <- sim$W[d]+sim$G_ggd[d]*sim$W[d]  # growth in g per d
}
What<-sim$W[nd]
if(LL){
return( ( log(Wtarget) - log(What) )^2 )
}else{
return(sim)
}
}
# incorporate loss to exuvia / spawning
# FB4 reads in a new data frame: day \t propS
# could also specify intermolt period?
# exuvia for green crab model was a set amt
# molt_day  <- seq(from=1,to=length(data$TempC),by=inter_molt_period)     # days when exuvia is shed in simulation period
# molt_bin  <- to_vec(for(i in seq(from=1,to=length(data$TempC))) if(i %in% molt_day) 1 else(0))   # binary for each day (1 = exuvia is shed)
sim_W()
#source("R/make.R")       # loads packages, data, setup, etc.
knitr::opts_chunk$set(echo = TRUE, fig.align="center")
thisYr <- format(Sys.time(), "%Y")
today  <- format(Sys.time(), "%b %d, %Y")
suppressMessages(source("R/setup.R"))
suppressMessages(source("R/make.R"))
username_path
password
con <-  odbcConnect("AFSC",username,password,believeNRows=FALSE)
con <-  odbcConnect("AFSC",username,password)
#source("R/make.R")       # loads packages, data, setup, etc.
knitr::opts_chunk$set(echo = TRUE, fig.align="center")
thisYr <- format(Sys.time(), "%Y")
today  <- format(Sys.time(), "%b %d, %Y")
suppressMessages(source("R/setup.R"))
#---------------------------------------------
source(file.path(code.path,"R/sub_scripts/runRACE_qrys.R"))
password
?odbcConnect()
dbcConnect("afsc@raja.afsc.noaa.gov",username,password,believeNRows=FALSE)
odbcConnect("afsc@raja.afsc.noaa.gov",username,password,believeNRows=FALSE)
odbcConnect("raja.afsc.noaa.gov",username,password)
odbcConnect("AFSC",username,password)
if(R.Version()$arch=="i386"){
con <-  odbcConnect("AFSC",username,password)
}else{
con <-  odbcConnect("AFSC",username,password,believeNRows=FALSE)
}
con
testT  <-  odbcGetInfo(con)
if(any(ls()=="testT"))
pswdTEST<-TRUE
if(pswdTEST){
cat("Successfully tested connection to RACEBASE\n")
}else{
stop("could not connect to RACEBASE\n")
}
cat("______________________________________________\n")
cat("______________________________________________\n")
cat("running SQL Queries - takes 10-15 mins to run\n")
cat("______________________________________________\n")
cat("______________________________________________\n")
####################################################################
## connect to database
####################################################################
con <- odbcConnect("AFSC",uid=username,pwd=password)   # update this in setup!
odbcGetInfo(con)
cat("--> connected to AFSC Database <--\n")
tables   <- sqlTables(con,schema="FOODLAB")$TABLE_NAME
tables2   <- sqlTables(con,schema=RACE_schema)$TABLE_NAME
cat(" -- Create data tables\n")
# Create data tables (not saved to Oracle for now)
#---------------------------------------------------
for(srv in 1:dim(srvys)[1]){
sub_dir <- file.path(data.path,srvys$reg[srv])
if(!dir.exists(sub_dir)) dir.create(sub_dir)
for(sp_nm in 1:dim(species_lkup)[1]){
cat(" -- ",srvys$reg[srv],": ",species_lkup$sp[sp_nm],"  \n")
sp_dir <- file.path(sub_dir,species_lkup$sp[sp_nm])
if(!dir.exists(sp_dir)) dir.create(sp_dir)
out_nm         <- paste0(".",species_lkup$sp[sp_nm],".",srvys$reg[srv])
location       <- data.frame(sqlQuery(con,location_sql(surveyIN = srvys[srv,2] )))
location_catch <- data.frame(sqlQuery(con,location_catch_sql(surveyIN = srvys[srv,2] )))
length         <- data.frame(sqlQuery(con,length_sql(surveyIN = srvys[srv,2] )))
save(location,       file=file.path(sp_dir,"location.Rdata"))
save(location_catch, file=file.path(sp_dir,"location_catch.Rdata"))
save(length,         file=file.path(sp_dir,"length.Rdata"))
}
}
species_lkup
suppressMessages(source("R/make.R"))
# update the SQL queries
#---------------------------------------------
source(file.path(code.path,"R/sub_scripts/runRACE_qrys.R"))
update_LWdata
if(update_LWdata==1){
source(file.path(code.path,"R/sub_scripts/updateLW.R"))
# reload with updated data:
source(file.path(code.path,"R/load_data.R"))
}
species_lkup
seasons
species_lkup
nreg <- length(srvys$reg)
nspp <- length(species_lkup$sp)
for (r in 1:nreg){
for(s in 1:nspp){
flnm <- paste0(srvys[r,]$reg,".srvy",
srvys[r,]$num,".",
species_lkup[s,]$sp,
".cpue.Rdata")
cat("now getting data for: ",flnm,"\n")
cpue_data <- suppressMessages(
get_CPUE_DATA(
out_dir    = file.path(data.out),
flnm       = flnm,
species    = species_lkup[s,]$SPECIES_CODE,
survey     = srvys[r,]$num,
includeNBS = TRUE,
saveit     = T,
bins       = sp_bins[[ species_lkup[s,]$sp ]]))
# # check the data :
# tt <- cpue_data%>%
#       group_by(YEAR,REGION,STATIONID,SN)%>%
#       filter(BIN ==400)%>%
#       summarize(cnt =length(STATIONID))
#  max(tt$cnt)  #Should be 1
# this looks to be a duplicate sampling...
# mis-entry or code error ? cpue_data%>%filter(YEAR==1988,STATIONID=="J-13")
}
}
load("data/out/2023_01_03/cpue/ebs/ebs.srvy98.plk.cpue_data")
dir(data/out/2023_01_03)
dir("data/out/2023_01_03")
dir("data/out/2023_01_03/spue")
dir("data/out/2023_01_03/cpue")
dir("data/out/2023_01_03/cpue/ebs")
/load("data/out/2023_01_03/cpue/ebs/ebs.srvy98.plk.cpue_data.Rdata")
load("data/out/2023_01_03/cpue/ebs/ebs.srvy98.plk.cpue_data.Rdata")
# get everything set up:
#----------------------------------------
# rm(list=ls())
# this uses the password saved in R/password.R
suppressMessages(source("R/make.R"))
nreg <- length(srvys$reg)
nspp <- length(species_lkup$sp)
for (r in 1:nreg){
for(s in 1:nspp){
flnm <- paste0(srvys[r,]$reg,".srvy",
srvys[r,]$num,".",
species_lkup[s,]$sp)
cat("now getting data for: ",flnm,"\n")
cpue_data <- suppressMessages(
get_CPUE_DATA(
datapath   = data.path,
out_dir    = file.path(data.out),
flnm       = flnm,
species    = species_lkup[s,]$SPECIES_CODE,
survey     = srvys[r,]$num,
includeNBS = TRUE,
saveit     = T,
bins       = sp_bins[[ species_lkup[s,]$sp ]]))
# # check the data :
if(1==10){
tt <- cpue_data%>%
group_by(YEAR,REGION,STATIONID,SN)%>%
filter(BIN ==400)%>%
summarize(cnt =length(STATIONID))
max(tt$cnt)  #Should be 1
#this looks to be a duplicate sampling...
#mis-entry or code error ?
cpue_data%>%filter(YEAR==1988,STATIONID=="J-13")
}
rm(cpue_data)
}
}
load("data/out/2023_01_03/cpue/ebs/ebs.srvy98.plk.cpue_data.Rdata")
names(cpue_data)
rmd2md(rmd_fl = "HowTo_get_survey_data",md_fl = "README")
# copy and paste this into R window (won't work within markdown)
rmd2md(rmd_fl = "HowTo_get_survey_data",md_fl = "README")
rmd2md(rmd_fl = "HowTo_get_survey_data",md_fl = "README")
# copy and paste this into R window (won't work within markdown)
rmd2md(rmd_fl = "HowTo_get_survey_data",md_fl = "README")
rmd2md(rmd_fl = "HowTo_get_survey_data",md_fl = "README")
# copy and paste this into R window (won't work within markdown)
rmd2md(rmd_fl = "HowTo_get_survey_data",md_fl = "README")
